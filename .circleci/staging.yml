version: '2.1'
orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@1.0
jobs:
  distribute:
    executor:
      name: android/android-machine
    steps:
      - checkout

      - flutter/install_sdk_and_pub:
          flutter_version: 2.8.1
      - flutter/install_android_gradle
      - flutter/install_android_gem

      - run:
          name: Create .env file
          command: |
            touch .env
            echo "PAYSTACK_PK=$PAYSTACK_PK" >> .env
            echo "PAYSTACK_SK=$PAYSTACK_SK" >> .env
            echo "GOOGLE_API=$GOOGLE_API" >> .env

      - run:
          name: Create keystore
          command: |
            cd android
            echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/key.jks
            echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > key.properties
            echo "$SUPPLY_JSON_KEY_DATA" > google_play_json_key.json
            

      - run:
          name: run fastlane 
          command: |
            cd android
            bundle exec fastlane internal

workflows:
  filter:
    only:
      - main
  distribute:
    jobs:
      - distribute

version: '2.1'
orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@1.0
jobs:
  distribute:
    executor:
      name: android/android-machine
    steps:
      - checkout

      - flutter/install_sdk_and_pub:
          flutter_version: 2.8.1
      - flutter/install_android_gradle
      - flutter/install_android_gem

      - run:
          name: Create .env file
          command: |
            touch .env
            echo "PAYSTACK_PK=$PAYSTACK_PK" >> .env
            echo "PAYSTACK_SK=$PAYSTACK_SK" >> .env
            echo "GOOGLE_API=$GOOGLE_API" >> .env

      - run:
          name: Create keystore
          command: |
            cd android
            echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/key.jks
            echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > key.properties
            echo "$SUPPLY_JSON_KEY_DATA" > google_play_json_key.json
            

      - run:
          name: run fastlane 
          command: |
            cd android
            bundle exec fastlane staging

workflows:

  distribute:
    jobs:
      - distribute:
          filters:
            branches:
              only:
                - staging

